-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the existing tables - this section generated from drop.tpl
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civicrm_campagnodon_transaction_link`;
DROP TABLE IF EXISTS `civicrm_campagnodon_transaction`;

SET FOREIGN_KEY_CHECKS=1;
-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civicrm_campagnodon_transaction
-- *
-- * Campagnodon transaction. Groups contact/contributions/payments/... related to a donation or adhesion coming from SPIP Campagnodon plugin.
-- *
-- *******************************************************/
CREATE TABLE `civicrm_campagnodon_transaction` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique CampagnodonTransaction ID',
  `idx` varchar(255) NULL COMMENT 'The campagnodon key as given by the origin system (SPIP, ...). A string like: spip/12345.',
  `status` varchar(20) NOT NULL DEFAULT 'init' COMMENT 'The status of the transaction.',
  `payment_url` varchar(255) COMMENT 'The url to pay the subscriptions.',
  `payment_instrument_id` int unsigned COMMENT 'FK vers Instrument de Paiement',
  `contribution_status_id` int unsigned,
  `contact_id` int unsigned COMMENT 'FK de contact',
  `campaign_id` int unsigned COMMENT 'The campaign for which this Campagnodon transaction is attached.',
  `email` varchar(254) COMMENT 'Courriel',
  `prefix_id` int unsigned COMMENT 'Préfixe ou Titre du nom (M., Mme...). FK de l\'Id du préfixe',
  `first_name` varchar(64) COMMENT 'Prénom.',
  `last_name` varchar(64) COMMENT 'Nom de famille.',
  `birth_date` date COMMENT 'Date de naissance',
  `street_address` varchar(96) COMMENT 'Concaténation de tous les composants d\'adresses routables (préfixe, numéro de rue, nom de rue, suffixe, unité\nnuméro OU P.O. Boîte). Les applications doivent pouvoir déterminer l\'emplacement physique avec ces données (pour la cartographie, le courrier\nlivraison, etc.).  ',
  `postal_code` varchar(64) COMMENT 'Stockez les codes postaux américains (zip5) ET internationaux. L\'application est responsable de la validation appropriée du pays / de la région.',
  `city` varchar(64) COMMENT 'Nom de la ville, de la capitale ou du village.',
  `country_id` int unsigned COMMENT 'A quel pays cette adresse appartient.',
  `phone` varchar(32) COMMENT 'Numéro de téléphone complet.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_idx`(idx),
  CONSTRAINT FK_civicrm_campagnodon_transaction_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE SET NULL,
  CONSTRAINT FK_civicrm_campagnodon_transaction_campaign_id FOREIGN KEY (`campaign_id`) REFERENCES `civicrm_campaign`(`id`) ON DELETE SET NULL,
  CONSTRAINT FK_civicrm_campagnodon_transaction_country_id FOREIGN KEY (`country_id`) REFERENCES `civicrm_country`(`id`) ON DELETE SET NULL
)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civicrm_campagnodon_transaction_link
-- *
-- * Link between CampagnodonTransaction and other tables (contributions, ...)
-- *
-- *******************************************************/
CREATE TABLE `civicrm_campagnodon_transaction_link` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique CampagnodonTransactionLink ID',
  `campagnodon_tid` int unsigned NOT NULL COMMENT 'FK to CampagnodonTransaction',
  `entity_table` varchar(64) NOT NULL COMMENT 'Table of the linked object',
  `entity_id` int unsigned COMMENT 'ID of the linked object',
  PRIMARY KEY (`id`),
  CONSTRAINT FK_civicrm_campagnodon_transaction_link_campagnodon_tid FOREIGN KEY (`campagnodon_tid`) REFERENCES `civicrm_campagnodon_transaction`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;
